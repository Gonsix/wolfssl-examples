WOLFROOT = ../../../wolfssl

CFLAGS =-DWOLFSSL_USER_SETTINGS -I. -I$(WOLFROOT) -Os -g 
ASFLAGS=-DWOLFSSL_USER_SETTINGS -I. -I$(WOLFROOT)

OBJ =\
	$(WOLFROOT)/wolfcrypt/src/rsa.o\
	$(WOLFROOT)/wolfcrypt/src/sha256.o\
	$(WOLFROOT)/wolfcrypt/src/hash.o\
	$(WOLFROOT)/wolfcrypt/src/random.o\
	$(WOLFROOT)/wolfcrypt/src/asn.o\
	$(WOLFROOT)/wolfcrypt/src/wc_port.o\
	$(WOLFROOT)/wolfcrypt/src/coding.o\
	$(WOLFROOT)/wolfcrypt/src/memory.o\

OBJ_SP_C32 =\
	$(WOLFROOT)/wolfcrypt/src/sp_c32.o\
	$(WOLFROOT)/wolfcrypt/src/sp_int.o

OBJ_SP_ARM64 =\
	$(WOLFROOT)/wolfcrypt/src/sp_arm64.o\
	$(WOLFROOT)/wolfcrypt/src/sp_int.o

OBJ_SP_X86_64 =\
	$(WOLFROOT)/wolfcrypt/src/sp_int.o\
	$(WOLFROOT)/wolfcrypt/src/cpuid.o\
	$(WOLFROOT)/wolfcrypt/src/sp_x86_64.o\
	$(WOLFROOT)/wolfcrypt/src/sp_x86_64_asm.o


sp:CFLAGS+= -DSP_FLAG
sp: all

sp_x86_64:CFLAGS+= -DSP_X86_64_FLAG
sp_x86_64:ASFLAGS+= -DSP_X86_64_FLAG
sp_x86_64: $(OBJ) $(OBJ_SP_X86_64)
	$(CC) $(CFLAGS) -o verify verify.c $(OBJ) $(OBJ_SP_X86_64)
	$(CC) $(CFLAGS) -o sign sign.c $(OBJ) $(OBJ_SP_X86_64)
	$(CC) $(CFLAGS) -DBENCHMARK -o benchmark verify.c $(OBJ) $(OBJ_SP_X86_64)

sp_arm64:CFLAGS+= -DSP_ARM64_FLAG
sp_arm64: all

tfm:CFLAGS+= -DTFM_FLAG
tfm: all

debug_memory:CFLAGS+= -DDEBUG_MEMORY 
debug_memory: verify sign

all: verify sign benchmark

verify: $(OBJ)
	$(CC) $(CFLAGS) -o verify verify.c $(OBJ)
sign: $(OBJ)
	$(CC) $(CFLAGS) -o sign sign.c $(OBJ)
benchmark: $(OBJ)
	$(CC) $(CFLAGS) -DBENCHMARK -o benchmark verify.c $(OBJ)
clean:
	rm $(OBJ) verify sign

size :
	size $(OBJ)
